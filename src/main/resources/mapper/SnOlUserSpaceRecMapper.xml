<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ch.stornetonline.modules.app.mapper.SnOlUserSpaceRecMapper" >
  <resultMap id="BaseResultMap" type="com.ch.stornetonline.modules.app.entity.SnOlUserSpaceRec" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="userid" property="userid" jdbcType="VARCHAR" />
    <result column="duration" property="duration" jdbcType="VARCHAR" />
    <result column="space" property="space" jdbcType="BIGINT" />
    <result column="type" property="type" jdbcType="BIT" />
    <result column="create_time" property="createTime" jdbcType="BIGINT" />
    <result column="due_time" property="dueTime" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, userid, duration, space, type, create_time, due_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from sn_ol_user_space_rec
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from sn_ol_user_space_rec
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.ch.stornetonline.modules.app.entity.SnOlUserSpaceRec" >
    insert into sn_ol_user_space_rec (id, userid, duration, 
      space, type, create_time, 
      due_time)
    values (#{id,jdbcType=VARCHAR}, #{userid,jdbcType=VARCHAR}, #{duration,jdbcType=VARCHAR}, 
      #{space,jdbcType=BIGINT}, #{type,jdbcType=BIT}, #{createTime,jdbcType=BIGINT}, 
      #{dueTime,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.ch.stornetonline.modules.app.entity.SnOlUserSpaceRec" >
    insert into sn_ol_user_space_rec
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userid != null" >
        userid,
      </if>
      <if test="duration != null" >
        duration,
      </if>
      <if test="space != null" >
        space,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="dueTime != null" >
        due_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="duration != null" >
        #{duration,jdbcType=VARCHAR},
      </if>
      <if test="space != null" >
        #{space,jdbcType=BIGINT},
      </if>
      <if test="type != null" >
        #{type,jdbcType=BIT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="dueTime != null" >
        #{dueTime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ch.stornetonline.modules.app.entity.SnOlUserSpaceRec" >
    update sn_ol_user_space_rec
    <set >
      <if test="userid != null" >
        userid = #{userid,jdbcType=VARCHAR},
      </if>
      <if test="duration != null" >
        duration = #{duration,jdbcType=VARCHAR},
      </if>
      <if test="space != null" >
        space = #{space,jdbcType=BIGINT},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=BIT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="dueTime != null" >
        due_time = #{dueTime,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ch.stornetonline.modules.app.entity.SnOlUserSpaceRec" >
    update sn_ol_user_space_rec
    set userid = #{userid,jdbcType=VARCHAR},
      duration = #{duration,jdbcType=VARCHAR},
      space = #{space,jdbcType=BIGINT},
      type = #{type,jdbcType=BIT},
      create_time = #{createTime,jdbcType=BIGINT},
      due_time = #{dueTime,jdbcType=BIGINT}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>