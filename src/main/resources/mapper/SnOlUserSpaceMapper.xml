<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ch.stornetonline.modules.app.mapper.SnOlUserSpaceMapper" >
  <resultMap id="BaseResultMap" type="com.ch.stornetonline.modules.app.entity.SnOlUserSpace" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="userid" property="userid" jdbcType="VARCHAR" />
    <result column="total_space" property="totalSpace" jdbcType="BIGINT" />
    <result column="free_space" property="freeSpace" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="BIGINT" />
    <result column="update_time" property="updateTime" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, userid, total_space, free_space, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from sn_ol_user_space
    where id = #{id,jdbcType=VARCHAR}
  </select>

  <select id="selectByUserId" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from sn_ol_user_space
    where userid = #{userId,jdbcType=VARCHAR}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from sn_ol_user_space
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.ch.stornetonline.modules.app.entity.SnOlUserSpace" >
    insert into sn_ol_user_space (id, userid, total_space, 
      free_space, create_time, update_time
      )
    values (#{id,jdbcType=VARCHAR}, #{userid,jdbcType=VARCHAR}, #{totalSpace,jdbcType=BIGINT}, 
      #{freeSpace,jdbcType=BIGINT}, #{createTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ch.stornetonline.modules.app.entity.SnOlUserSpace" >
    insert into sn_ol_user_space
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userid != null" >
        userid,
      </if>
      <if test="totalSpace != null" >
        total_space,
      </if>
      <if test="freeSpace != null" >
        free_space,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="totalSpace != null" >
        #{totalSpace,jdbcType=BIGINT},
      </if>
      <if test="freeSpace != null" >
        #{freeSpace,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ch.stornetonline.modules.app.entity.SnOlUserSpace" >
    update sn_ol_user_space
    <set >
      <if test="userid != null" >
        userid = #{userid,jdbcType=VARCHAR},
      </if>
      <if test="totalSpace != null" >
        total_space = #{totalSpace,jdbcType=BIGINT},
      </if>
      <if test="freeSpace != null" >
        free_space = #{freeSpace,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ch.stornetonline.modules.app.entity.SnOlUserSpace" >
    update sn_ol_user_space
    set userid = #{userid,jdbcType=VARCHAR},
      total_space = #{totalSpace,jdbcType=BIGINT},
      free_space = #{freeSpace,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>